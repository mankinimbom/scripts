USE [master]
GO

/****** Object:  StoredProcedure [dbo].[proc_check_linked_servers]    Script Date: 10/10/2021 8:26:38 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE [dbo].[proc_check_linked_servers] @emailProfile VARCHAR(255),@emailTo VARCHAR(2000)
AS 
 
BEGIN
---Job schedule query
---exec proc_check_linked_servers 'profiler name','E-mail ID'

DECLARE @test_linkedserver BIT
DECLARE @servername SYSNAME
 
 
select ROW_NUMBER() Over(Order by server_id) as Seq,name as LinkerServer 
into #LinkedServers
from sys.servers (nolock) where is_linked=1 ---and [name] not in ('repl_distributor') --If any link server want to exclude  
 
declare @i as int = 1
declare @j as int = (select count(*) from #LinkedServers)
 
WHILE (@i<=@j) 
BEGIN
 
 
       BEGIN TRY
       select @servername=LinkerServer from #LinkedServers where Seq=@i
       --select @servername
       EXEC @test_linkedserver= sys.sp_testlinkedserver @servername 
 
       PRINT 'Sucessfully connected to ' + CAST(@servername as VARCHAR(30))
       END TRY
 
       BEGIN CATCH
       PRINT 'Failed to connect to ' + CAST(@servername as VARCHAR(30))
 
       IF (@emailProfile <> '') AND (@emailTo <> '')
       BEGIN
       DECLARE @emailSubject VARCHAR(255)
       DECLARE @emailBody VARCHAR(8000)
 
       SET @emailSubject = 'Linked Server Connnection Failure : ' + @servername + ' linked server cannot be accessed from ' + @@SERVERNAME
       SET @emailBody = @emailSubject
 
       EXEC msdb.dbo.sp_send_dbmail 
              @profile_name= @emailProfile
              , @recipients=@emailTo
              , @body=@emailBody
              , @subject=@emailSubject
              , @importance='High'
       END        
        
       RAISERROR ('Linked Server Failure', 16, 1, @emailSubject) WITH LOG
 
       END CATCH
 
set @i = @i + 1  
 END 
END
GO
